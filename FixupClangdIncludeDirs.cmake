# Workaround for libraries that use modmap and need to work with clangd. This is
# only necessary until llvm version 20 where support for modmap is added to
# clangd.
set(ALL_SYSTEM_INCLUDE_DIRS "")

set(FIXUP_PACKAGE_NAME glfw3 glm)
set(FIXUP_TARGET_NAME glfw glm::glm-header-only)

set(FIXUP_INDEX 0)
foreach(PACKAGE ${FIXUP_PACKAGE_NAME})
  find_package(${PACKAGE} REQUIRED)
  list(GET FIXUP_TARGET_NAME ${FIXUP_INDEX} TARGET_NAME)
  get_target_property(LIB_INC ${TARGET_NAME} INTERFACE_INCLUDE_DIRECTORIES)
  if(LIB_INC)
    list(APPEND ALL_SYSTEM_INCLUDE_DIRS ${LIB_INC})
    message(STATUS "Found ${PACKAGE} includes for .clangd: ${LIB_INC}")
  endif()
  unset(LIB_INC)

  math(EXPR FIXUP_INDEX "${FIXUP_INDEX} + 1")
endforeach()
unset(FIXUP_INDEX)

# --- Generate the .clangd content ---
set(CLANGD_CONTENT "CompileFlags:\n") # Start the YAML structure
string(APPEND CLANGD_CONTENT "  # Generated by CMakeLists.txt\n")
string(APPEND CLANGD_CONTENT "  Add:\n") # Start the list of flags to add

if(ALL_SYSTEM_INCLUDE_DIRS)
  # Remove duplicate paths that might have been added
  list(REMOVE_DUPLICATES ALL_SYSTEM_INCLUDE_DIRS)
  message(
    STATUS "Unique system includes for .clangd: ${ALL_SYSTEM_INCLUDE_DIRS}")

  # Add each unique include directory as an -isystem flag The format "-
  # -isystem\n - /path/to/include" adds two arguments per include path
  foreach(INCLUDE_DIR ${ALL_SYSTEM_INCLUDE_DIRS})
    # Use -isystem for system libraries to suppress warnings from them
    string(APPEND CLANGD_CONTENT "    - -isystem\n") # The flag itself
    string(APPEND CLANGD_CONTENT "    - ${INCLUDE_DIR}\n") # The path, ensure
                                                           # it's quoted if
                                                           # needed (usually not
                                                           # for clangd yaml)
  endforeach()
endif()

file(WRITE ${CMAKE_SOURCE_DIR}/.clangd "${CLANGD_CONTENT}")
message(STATUS "Generated/Updated .clangd in ${CMAKE_SOURCE_DIR}")
