name: Non-Nix Build Test

on:
  pull_request:
    branches: [ master ]

jobs:
  test-ubuntu:
    runs-on: ubuntu-24.04
    name: Ubuntu 24.04 - Clang
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y clang cmake ninja-build
        
    - name: Bootstrap vcpkg
      run: ./setup-vcpkg.sh
      
    - name: Configure CMake
      env:
        CC: clang
        CXX: clang++
      run: cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE=vcpkg/scripts/buildsystems/vcpkg.cmake -G Ninja
          
    - name: Build
      run: cmake --build build --parallel
      
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure

  test-macos:
    runs-on: macos-14
    name: macOS 14 - Apple Silicon
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Verify Apple Silicon architecture
      run: |
        echo "System architecture: $(uname -m)"
        echo "Hardware platform: $(uname -p)"
        sysctl -n machdep.cpu.brand_string
        if [ "$(uname -m)" != "arm64" ]; then
          echo "❌ Expected Apple Silicon (arm64) but got $(uname -m)"
          exit 1
        fi
        echo "✅ Running on Apple Silicon (arm64)"
        
    - name: Install dependencies
      run: |
        brew install llvm cmake ninja
        
    - name: Set up LLVM
      run: |
        echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH
        
    - name: Verify compiler
      run: |
        clang++ --version
        echo '#include <print>' | clang++ -std=c++23 -E - || echo "C++23 print not available"
        
    - name: Bootstrap vcpkg
      run: ./setup-vcpkg.sh
      
    - name: Configure CMake
      env:
        CC: /opt/homebrew/opt/llvm/bin/clang
        CXX: /opt/homebrew/opt/llvm/bin/clang++
      run: |
        cmake -B build -S . \
          -DCMAKE_TOOLCHAIN_FILE=vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DCMAKE_BUILD_TYPE=Release \
          -G Ninja
          
    - name: Build
      run: cmake --build build --parallel
      
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure

  test-windows:
    runs-on: windows-2022
    name: Windows 2022 - MSVC 2022
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2
      
    - name: Bootstrap vcpkg
      run: .\setup-vcpkg.bat
      shell: cmd
      
    - name: Configure CMake
      run: cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE="vcpkg/scripts/buildsystems/vcpkg.cmake" -DCMAKE_BUILD_TYPE=Release 
          
    - name: Build
      run: cmake --build build --parallel
      
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure -C Release
